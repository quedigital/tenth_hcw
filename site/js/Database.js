// stores a user's spread ratings locally (per browser in HTML5 localStorage) and updates that rating via Firebase
define(["firebase", "jquery.json"], function () {
	var _initialized = false;
	
	var ratingsRef, commentsRef;
	
	function initialize () {
		if (!_initialized) {
			ratingsRef = new Firebase("https://hcw10.firebaseio.com/ratings");
			commentsRef = new Firebase("https://hcw10.firebaseio.com/comments");
			_initialized = true;
		}
	}
	
	function getMyRating (id) {
		if (typeof(Storage) !== "undefined") {
			var details = localStorage.getItem(id);
			if (details) {
				details = $.evalJSON(details);
				return details.rating;
			}
		}
		
		return undefined;
	}
	
	function setMyRating (id, rating) {
		initialize();
		
		if (typeof(Storage) !== "undefined") {
			var details = localStorage.getItem(id);
			if (!details) {
				// Generate a reference to a new location and add some data using push()
				var pushedRatingRef = ratingsRef.child(id).push({ rating: rating });

				// Get the unique ID generated by push()
				var ratingID = pushedRatingRef.key();
				
				details = { ratingID: ratingID };
			} else {
				// store it in Firebase too
				details = $.evalJSON(details);
				
				var pushedRatingRef = ratingsRef.child(id).child(details.ratingID);
				pushedRatingRef.set( { rating: rating } );
			}
			
			details.rating = rating;
			localStorage.setItem(id, $.toJSON(details));			
		}
	}
	
	function getAverageRating (id, callback) {
		initialize();
		
		var allRatings = ratingsRef.child(id).once("value", $.proxy(onReceivedRatings, this, callback));
	}
	
	function onReceivedRatings (callback, dataSnapshot) {
		var vals = dataSnapshot.val();
		
		if (vals) {
			var total = 0, count = 0;
			for (var each in vals) {
				total += vals[each].rating;
				count++;
			}
			callback(total / count);
		} else
			callback(undefined);
	}
	
	function getComments (id, callback) {
		var allRatings = commentsRef.child(id).once("value", $.proxy(onReceivedComments, this, callback));
	}
	
	function onReceivedComments (callback, dataSnapshot) {
		var vals = dataSnapshot.val();
		
		callback(vals);
	}
	
	function addComment (id, options, callback) {
		commentsRef.child(id).push(options, callback);
	}

	var Database = {
		getMyRating: getMyRating,
		setMyRating: setMyRating,
		getAverageRating: getAverageRating,
		getComments: getComments,
		addComment: addComment
	}
	
	return Database;	
});
